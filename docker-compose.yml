version: '3.8'

services:
  # PostgreSQL Database (using existing credentials)
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: goat_morpho
      POSTGRES_USER: goat_morpho_user
      POSTGRES_PASSWORD: 123456789
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U goat_morpho_user -d goat_morpho"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-123456789} --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:123456789}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-123456789}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    sysctls:
      - net.core.somaxconn=65535

  # GoatMorpho Web Application
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 goat_morpho.wsgi:application
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      # Django Settings
      - DJANGO_DEBUG=${DEBUG:-True}
      - DJANGO_SECRET_KEY=${SECRET_KEY:-django-insecure-w_&2ei37mfaexa#u!u&10((7*3$a-&+oe7!84paf9d*pn@5oc!}
      
      # Database Settings (using existing credentials)
      - DB_NAME=goat_morpho
      - DB_USER=goat_morpho_user
      - DB_PASSWORD=123456789
      - DB_HOST=db
      - DB_PORT=5432
      
      # Redis Settings
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-123456789}
      - REDIS_DB=1
      - REDIS_TIMEOUT=5
      - REDIS_MAX_CONNECTIONS=50
      - CACHE_TIMEOUT=600
      - SESSION_COOKIE_AGE=1209600
      
      # Email Settings
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-dossoukponganfleming@gmail.com}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-Fleming.lucas}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-noreply@goatmorpho.info}
      
      # AI/ML Settings
      - ENABLE_ADVANCED_CV=True
      - ENABLE_BREED_MODELS=True
      - CONFIDENCE_THRESHOLD=0.7
      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 60s
      timeout: 30s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/var/www/static:ro
      - ./media:/var/www/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

  # Redis Commander (Optional - for Redis monitoring)
  redis-commander:
    image: rediscommander/redis-commander:latest
    hostname: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:1:${REDIS_PASSWORD:-123456789}
      - HTTP_USER=admin
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin123}
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    driver: bridge
